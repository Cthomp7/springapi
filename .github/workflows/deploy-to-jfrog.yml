name: Build Docker Image from JFrog JAR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21 and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Configure Maven settings.xml
        run: |
          mkdir -p $HOME/.m2
          cat > $HOME/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>jfrog-releases</id>
                <username>${{ secrets.JFROG_USERNAME }}</username>
                <password>${{ secrets.JFROG_API_TOKEN }}</password>
              </server>
              <server>
                <id>jfrog-snapshots</id>
                <username>${{ secrets.JFROG_USERNAME }}</username>
                <password>${{ secrets.JFROG_API_TOKEN }}</password>
              </server>
            </servers>
          </settings>

      - name: Build and deploy JAR to JFrog Maven repo
        run: mvn clean deploy

      - name: Download JAR from JFrog with authentication
        run: |
          curl -u "${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_API_TOKEN }}" \
            -o app.jar \
            "https://trialpkvroj.jfrog.io/artifactory/maven-local-springapi/com/jts/crudExample/0.0.1-SNAPSHOT/crudExample-0.0.1-SNAPSHOT.jar"

      - name: Build Docker image
        run: docker build -t springapi:latest .

      - name: Log in to JFrog Docker registry
        run: echo "${{ secrets.JFROG_API_TOKEN }}" | docker login trialpkvroj.jfrog.io -u "${{ secrets.JFROG_USERNAME }}" --password-stdin

      - name: Tag Docker image
        run: docker tag springapi:latest trialpkvroj.jfrog.io/docker-local-springapi/springapi:latest

      - name: Push Docker image to JFrog
        run: docker push trialpkvroj.jfrog.io/docker-local-springapi/springapi:latest
